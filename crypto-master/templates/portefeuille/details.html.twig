{% extends 'base.html.twig' %}

{% block title %}Détails du Portefeuille{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .portfolio-balance {
            background-color: #f8f9fa;
            padding: 1rem;
            border-radius: 0.5rem;
            margin-bottom: 2rem;
            text-align: right;
        }
        .crypto-position {
            background-color: white;
            border: 1px solid #dee2e6;
            border-radius: 0.5rem;
            padding: 1rem;
            margin-bottom: 1rem;
        }
        .transaction-history {
            margin-top: 3rem;
        }
        .evolution-positive {
            color: #28a745;
        }
        .evolution-negative {
            color: #dc3545;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container mt-4">
        {# Flash messages #}
        {% for label, messages in app.flashes %}
            {% for message in messages %}
                <div class="alert alert-{{ label }} {% if '\n' in message %}pre-formatted{% endif %}">
                    {% if '\n' in message %}
                        <pre class="mb-0" style="white-space: pre-wrap; font-family: inherit;">{{ message }}</pre>
                    {% else %}
                        {{ message }}
                    {% endif %}
                </div>
            {% endfor %}
        {% endfor %}

        {# Portfolio Balance #}
        <div class="portfolio-balance">
            <h4>Solde du Portefeuille</h4>
            <h2>{{ portefeuille.soldeUtilisateur|number_format(2, ',', ' ') }} €</h2>
        </div>

        {# Crypto Positions #}
        <h3>Positions Actuelles</h3>
        {% if positions|length > 0 %}
            {% for position in positions %}
                <div class="crypto-position">
                    <div class="row align-items-center">
                        <div class="col-md-3">
                            <h5>{{ position.nomCrypto }}</h5>
                            <small class="text-muted">Acheté le {{ position.date_action|date('d/m/Y') }}</small>
                        </div>
                        <div class="col-md-3">
                            <div>Prix d'achat: {{ position.prix_achat|number_format(2, ',', ' ') }} €</div>
                            <div>Prix actuel: {{ position.prix_actuel|number_format(2, ',', ' ') }} €</div>
                        </div>
                        <div class="col-md-2">
                            <div>Quantité: {{ position.nbr_crypto }}</div>
                            <div>Total: {{ position.prix_total|number_format(2, ',', ' ') }} €</div>
                        </div>
                        <div class="col-md-2">
                            <div class="{% if position.pourcentage_evolution >= 0 %}evolution-positive{% else %}evolution-negative{% endif %}">
                                {{ position.pourcentage_evolution >= 0 ? '+' : '' }}{{ position.pourcentage_evolution }}%
                            </div>
                        </div>
                        <div class="col-md-2">
                            <button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#venteModal{{ position.idportefeuillefille }}">
                                Vendre
                            </button>
                        </div>
                    </div>
                </div>

                {# Modal de vente pour chaque position #}
                <div class="modal fade" id="venteModal{{ position.idportefeuillefille }}" tabindex="-1">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Vendre {{ position.nomCrypto }}</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <form action="{{ path('app_vendre_crypto') }}" method="POST" data-action="vendre">
                                <div class="modal-body">
                                    <input type="hidden" name="idPortefeuilleFille" value="{{ position.idportefeuillefille }}">
                                    <div class="mb-3">
                                        <label for="nbrAVendre" class="form-label">Nombre de crypto à vendre</label>
                                        <input type="number" class="form-control" id="nbrAVendre" name="nbrAVendre" 
                                               value="{{ position.nbr_crypto }}" max="{{ position.nbr_crypto }}" min="1" required>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                                    <button type="submit" class="btn btn-warning">Confirmer la vente</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            {% endfor %}
        {% else %}
            <div class="alert alert-info">Aucune position d'achat active.</div>
        {% endif %}

        {# Transaction History #}
        <div class="transaction-history">
            <h3>Historique des Transactions</h3>
            <table class="table">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Crypto</th>
                        <th>Type</th>
                        <th>Quantité</th>
                        <th>Prix unitaire</th>
                        <th>Total</th>
                    </tr>
                </thead>
                <tbody>
                    {% for transaction in transactions %}
                        <tr>
                            <td>{{ transaction.dateAction|date('d/m/Y H:i') }}</td>
                            <td>{{ transaction.nomCrypto }}</td>
                            <td>{{ transaction.typeAction }}</td>
                            <td>{{ transaction.nbrcrypto }}</td>
                            <td>{{ transaction.prix|number_format(2, ',', ' ') }} €</td>
                            <td>{{ transaction.prixtotal|number_format(2, ',', ' ') }} €</td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Fonction pour mettre à jour le solde
            function updateBalance(newBalance) {
                const balanceElement = document.querySelector('.portfolio-balance h2');
                if (balanceElement) {
                    balanceElement.textContent = new Intl.NumberFormat('fr-FR', { 
                        style: 'currency', 
                        currency: 'EUR' 
                    }).format(newBalance);
                }
            }

            // Fonction pour mettre à jour les positions
            function updatePositions() {
                fetch('{{ path('app_portefeuille_positions') }}')
                    .then(response => response.json())
                    .then(data => {
                        const positionsContainer = document.querySelector('.crypto-position').parentElement;
                        if (data.positions.length > 0) {
                            positionsContainer.innerHTML = data.positions.map(position => `
                                <div class="crypto-position">
                                    <div class="row align-items-center">
                                        <div class="col-md-3">
                                            <h5>${position.nomCrypto}</h5>
                                            <small class="text-muted">Acheté le ${new Date(position.date_action).toLocaleDateString()}</small>
                                        </div>
                                        <div class="col-md-3">
                                            <div>Prix d'achat: ${new Intl.NumberFormat('fr-FR', { style: 'currency', currency: 'EUR' }).format(position.prix_achat)}</div>
                                            <div>Prix actuel: ${new Intl.NumberFormat('fr-FR', { style: 'currency', currency: 'EUR' }).format(position.prix_actuel)}</div>
                                        </div>
                                        <div class="col-md-2">
                                            <div>Quantité: ${position.nbr_crypto}</div>
                                            <div>Total: ${new Intl.NumberFormat('fr-FR', { style: 'currency', currency: 'EUR' }).format(position.prix_total)}</div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="${position.pourcentage_evolution >= 0 ? 'evolution-positive' : 'evolution-negative'}">
                                                ${position.pourcentage_evolution >= 0 ? '+' : ''}${position.pourcentage_evolution}%
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#venteModal${position.idportefeuillefille}">
                                                Vendre
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            `).join('');
                        } else {
                            positionsContainer.innerHTML = '<div class="alert alert-info">Aucune position d\'achat active.</div>';
                        }
                    });
            }

            // Fonction pour mettre à jour l'historique
            function updateTransactions() {
                fetch('{{ path('app_portefeuille_transactions') }}')
                    .then(response => response.json())
                    .then(data => {
                        const tbody = document.querySelector('.transaction-history table tbody');
                        tbody.innerHTML = data.transactions.map(transaction => `
                            <tr>
                                <td>${new Date(transaction.dateAction).toLocaleString()}</td>
                                <td>${transaction.nomCrypto}</td>
                                <td>${transaction.typeAction}</td>
                                <td>${transaction.nbrcrypto}</td>
                                <td>${new Intl.NumberFormat('fr-FR', { style: 'currency', currency: 'EUR' }).format(transaction.prix)}</td>
                                <td>${new Intl.NumberFormat('fr-FR', { style: 'currency', currency: 'EUR' }).format(transaction.prixtotal)}</td>
                            </tr>
                        `).join('');
                    });
            }

            // Gérer le formulaire de vente
            const forms = document.querySelectorAll('form[data-action="vendre"]');
            forms.forEach(form => {
                form.addEventListener('submit', function(e) {
                    e.preventDefault();
                    
                    const formData = new FormData(form);
                    
                    fetch('{{ path('app_vendre_crypto') }}', {
                        method: 'POST',
                        body: formData
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            const details = data.details;
                            Swal.fire({
                                title: 'Vente effectuée avec succès!',
                                html: `
                                    <div class="text-left">
                                        <p><strong>Quantité vendue :</strong> ${details.quantite}</p>
                                        <p><strong>Prix unitaire :</strong> ${details.prix_unitaire}€</p>
                                        <p><strong>Prix total :</strong> ${details.prix_total}€</p>
                                        <p><strong>Commission (${details.taux_commission}%) :</strong> ${details.montant_commission}€</p>
                                        <p class="fw-bold"><strong>Montant final :</strong> ${details.montant_final}€</p>
                                    </div>
                                `,
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    // Mettre à jour les données sans recharger
                                    updateBalance(data.newSolde);
                                    updatePositions();
                                    updateTransactions();
                                    
                                    // Fermer le modal
                                    const modal = bootstrap.Modal.getInstance(form.closest('.modal'));
                                    modal.hide();
                                }
                            });
                        } else {
                            Swal.fire({
                                title: 'Erreur',
                                text: data.error,
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    })
                    .catch(error => {
                        Swal.fire({
                            title: 'Erreur',
                            text: 'Une erreur est survenue lors de la vente',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    });
                });
            });
        });
    </script>
{% endblock %}
